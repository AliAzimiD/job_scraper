version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: job-scraper-web
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
      - job_data:/app/data
    environment:
      - FLASK_ENV=production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=jobsdb
      - POSTGRES_USER=jobuser
      - POSTGRES_PASSWORD=secure_password_change_me
      - FLASK_SECRET_KEY=change_this_to_a_random_secret_key
      - API_USERNAME=api_user
      - API_PASSWORD=change_this_to_a_secure_password
      - LOG_LEVEL=INFO
      - LOG_DIR=/app/data/logs
      - CONFIG_PATH=/app/config/app_config.yaml
    depends_on:
      - db
    command: bash -c "cd /app && python -m src.web_app"
    networks:
      - job-scraper-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/" ]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:14-alpine
    container_name: job-scraper-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=jobsdb
      - POSTGRES_USER=jobuser
      - POSTGRES_PASSWORD=secure_password_change_me
    ports:
      - "5432:5432"
    networks:
      - job-scraper-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U jobuser -d jobsdb" ]
      interval: 10s
      timeout: 5s
      retries: 5

  superset:
    build:
      context: .
      dockerfile: Dockerfile.superset
    container_name: job-scraper-superset
    restart: unless-stopped
    depends_on:
      - db
      - redis
    ports:
      - "8088:8088"
    environment:
      - SUPERSET_SECRET_KEY=change_this_superset_secret_key
      - ADMIN_PASSWORD=admin
      - DB_HOST=db
      - DB_PORT=5432
      - DATABASE_URI=postgresql://jobuser:secure_password_change_me@db:5432/jobsdb
      - SUPERSET_DB_URI=postgresql://jobuser:secure_password_change_me@db:5432/superset
      - REDIS_URL=redis://redis:6379/0
      - CREATE_SAMPLE_DASHBOARD=true
      - MAPBOX_API_KEY=${MAPBOX_API_KEY:-""}
      - PYTHONPATH=/app/pythonpath
      - SUPERSET_ENV=production
    volumes:
      - superset_home:/app/superset_home
    networks:
      - job-scraper-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8088/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: job-scraper-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - job-scraper-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  job-scraper-network:
    driver: bridge

volumes:
  postgres_data:
  job_data:
  superset_home:
  redis_data:
